#include <string>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

int solution(int n, vector<vector<int>> edge) {
    int answer = 0;
    bool conn[n+1][n+1];
    for(int i=0; i<n+1;i++)
        for(int j=0; j<n+1; j++)
            conn[i][j] = false;
    vector<int> dist(n+1,0);
    vector<int> tmp;
    vector<int> tmpNext;
    int distance = 1; 
    for(vector<int> e : edge){
        conn[e[0]][e[1]] = true;
        conn[e[1]][e[0]] = true;
    }
    tmp.push_back(1);
    while(!tmp.empty()){
        for(int t : tmp){
            for(int i=2; i<n+1; i++){
                if(conn[t][i] && !dist[i]){
                    tmpNext.push_back(i);
                    dist[i] = distance;
                }
            }
        }
        distance++;
        tmp = tmpNext;
        tmpNext.clear();
    }
    sort(dist.begin(), dist.end());
    int max = dist[n];
    for (int d : dist)
        if(d==max) answer++;
    return answer;
}
