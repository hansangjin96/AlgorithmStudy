#include <iostream>
#include <vector>
#include <queue>
using namespace std;

int solution(int N, vector<vector<int>> road, int K) {
    int answer = 0, dist[51];
    vector<pair<int,int>> conn[51];
    priority_queue<pair<int,int>> pq;
    for(int i=0; i<road.size(); i++){
        conn[road[i][0]].push_back({road[i][1],road[i][2]});
        conn[road[i][1]].push_back({road[i][0],road[i][2]});
    }
    for (int i=0; i<51; i++) dist[i] = 1000000;
    pq.push({0, 1});
    dist[1] = 0;
    
    while(!pq.empty()){
        int c = pq.top().first, now = pq.top().second;
        pq.pop();
        for(int i=0; i<conn[now].size(); i++){
            if(dist[conn[now][i].first] > conn[now][i].second + c){
                dist[conn[now][i].first] = conn[now][i].second + c;
                pq.push({dist[conn[now][i].first], conn[now][i].first });
            }
        }
    }
    for (int i=0; i<51; i++){
        if(dist[i] <= K) answer++;
    }
    
    return answer;
}
